Index: hack_tool/llama_api/process.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import json\r\nimport requests\r\n\r\ndef prepare_prompt(reviews):\r\n    # Декларация полей\r\n    field_definitions = (\r\n        \"Поля для сводки в формате JSON:\\n\"\r\n        \"1. summary: Краткое описание сотрудника на основе отзывов. Строка.\\n\"\r\n        \"2. parameters: Оценки ключевых параметров сотрудника. Объект со следующими полями:\\n\"\r\n        \"   - Коммуникабельность: Оценка от 1 до 5\\n\"\r\n        \"   - Ответственность: Оценка от 1 до 5\\n\"\r\n        \"   - Дополнительные параметры также принимаются с оценками от 1 до 5\\n\"\r\n        \"3. strengths: Сильные стороны сотрудника. Массив строк.\\n\"\r\n        \"4. weaknesses: Слабые стороны сотрудника. Массив строк.\\n\"\r\n        \"5. recommendations: Рекомендации по улучшению. Массив строк.\\n\"\r\n    )\r\n\r\n    # Инструкции и формат JSON\r\n    instructions = (\r\n        \"Ты профессиональный HR-специалист.\\n\"\r\n        \"Вот определенное количество отзывов о сотруднике:\\n\\n\"\r\n    )\r\n\r\n    # Добавляем отзывы в промпт\r\n    for i, review in enumerate(reviews, start=1):\r\n        instructions += f\"Отзыв {i}:\\n{review[2]}\\n\\n\"\r\n\r\n    instructions += f\"user_id: {reviews[1][1]}\\n\"\r\n\r\n    # Упоминание формата JSON и требование строго следовать структуре\r\n    instructions += (\r\n        \"На основе этих отзывов нужно создать подробную сводку в формате JSON, используя следующие поля:\\n\\n\"\r\n        '  \"user_id\": \"\",\\n'\r\n        '  \"role\": \"Предположительная роль сотрудника только 1 вариант\",\\n'\r\n        + field_definitions +\r\n        \"\\nСгенерируй JSON-объект, который строго следует указанной структуре. Пример:\\n\\n\"\r\n        \"{\\n\"\r\n        '  \"summary\": \"Краткое описание сотрудника\",\\n'\r\n        '  \"parameters\": {\\n'\r\n        '      \"Коммуникабельность\": 5,\\n'\r\n        '      \"Ответственность\": 4,\\n'\r\n        '      // Дополнительные параметры\\n'\r\n        \"  },\\n\"\r\n        '  \"strengths\": [\\n'\r\n        '      \"Сильная сторона 1\",\\n'\r\n        '      \"Сильная сторона 2\"\\n'\r\n        \"  ],\\n\"\r\n        '  \"weaknesses\": [\\n'\r\n        '      \"Слабая сторона 1\",\\n'\r\n        '      \"Слабая сторона 2\"\\n'\r\n        \"  ],\\n\"\r\n        '  \"recommendations\": [\\n'\r\n        '      \"Рекомендация 1\",\\n'\r\n        '      \"Рекомендация 2\"\\n'\r\n        \"  ]\\n\"\r\n        \"}\\n\\n\"\r\n        \"Пожалуйста, соблюдай формат JSON и используй кодировку UTF-8. Работай только с текущими данными, не учитывая контекст прошлых ответов.\"\r\n        \"Также, прошу заполнить все пункты, weakness и recommendations в том числе, даже если нечего добавить, то добавь что нибудь пожалуйста, это важно!\"\r\n    )\r\n\r\n    return instructions\r\n\r\ndef process_lama(prompt):\r\n    url = \"https://vk-scoreworker-case.olymp.innopolis.university/generate\"\r\n\r\n    # Регулярное выражение для валидации JSON-ответа\r\n    regex_pattern = r'^\\{\\s*\"summary\":\\s*\".+?\",\\s*\"parameters\":\\s*\\{(?:\\s*\".+?\":\\s*[1-5],?\\s*)+\\},\\s*\"strengths\":\\s*\\[.+?\\],\\s*\"weaknesses\":\\s*\\[.+?\\],\\s*\"recommendations\":\\s*\\[.+?\\]\\s*\\}$'\r\n\r\n    data = {\r\n        \"prompt\": [prompt],\r\n        \"apply_chat_template\": True,\r\n        \"system_prompt\": \"Ты профессиональный инструмент для HR специалиста\",\r\n        \"max_tokens\": 100000,\r\n        \"temperature\": 0.7,\r\n        \"n\": 1,\r\n    }\r\n\r\n    headers = {\r\n        \"Content-Type\": \"application/json\"\r\n    }\r\n\r\n    response = requests.post(url, data=json.dumps(data), headers=headers)\r\n\r\n    if response.status_code == 200:\r\n        print(response.json())\r\n        return response.json()\r\n    else:\r\n        return f\"Error: {response.status_code} - {response.text}\"\r\n
===================================================================
diff --git a/hack_tool/llama_api/process.py b/hack_tool/llama_api/process.py
--- a/hack_tool/llama_api/process.py	(revision be6fdbe0295aa40308c6ac3d71a3fbb6132d45df)
+++ b/hack_tool/llama_api/process.py	(date 1730618469410)
@@ -60,7 +60,8 @@
 
     return instructions
 
-def process_lama(prompt):
+
+def proccess_lama(prompt):
     url = "https://vk-scoreworker-case.olymp.innopolis.university/generate"
 
     # Регулярное выражение для валидации JSON-ответа
